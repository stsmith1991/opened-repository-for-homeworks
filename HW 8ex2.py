class MyEx(Exception):
    def __init__(self, txt):
        self.txt = txt
    """
    Своё исключение в чистом виде. Вызывается только вручную. В качестве комментария ошибки выводит первый агрумент
    """


numbs = input(
    f'Наберите "а/b" для получения результата с плавающей точкой\nНаберите "а//b" для целочисленного деления\n')
full = bool(True)
# Если сначала прописать обычное деление, он сломя голову побежит дальше и сломается об второй слеш при сплите
if '//' in numbs:
    row = numbs.split('//')
    print(f'Введено делимое {row[0]} и часное {row[1]}')
    full = False
elif '/' in numbs:
    # Теперь, когда целочисленное деление исключено, исходим из того, что запрошено обычное
    row = numbs.split('/')
    print(f'Введено делимое {row[0]} и часное {row[1]}')
try:
    # Осуществляю попытку деления, предусмотрев все варианты
    numbs = [float(i) for i in row]
    if numbs[1] == float(0):
        raise MyEx('На ноль делить нельзя')
    #Собсно, само задание
except MyEx as err:
    print(err)
except ValueError:
    print('Мы хотели НЕ ЭТУ ошибку. Введите по другому')
except NameError:
    print(f'Уберите кота с клавиатуры. А как бы по-другому вы обьяснили бы ввод \n"{numbs}"? ')
    # Ну, вроде, всё. Если доехали досюда, то, наконец то, делим и выводим результат
else:
    if full == True:
        res = float(round(numbs[0] / numbs[1], 3))
    else:
        res = int(numbs[0] // numbs[1])
    print(f'Результат деления {res}')
